name: Required Status Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'
      - run: npm ci
      
      - name: Setup test environment
        run: |
          cp .env.example .env
          sed -i 's|file:./dev.db|file:./test.db|' .env
          echo "ARTNET_ENABLED=false" >> .env
          echo "DMX_UNIVERSE_COUNT=2" >> .env
          echo "NON_INTERACTIVE=true" >> .env

      - name: Setup database
        run: |
          npx prisma migrate deploy
          npx prisma generate

      - run: npm test
        env:
          NODE_ENV: test
          DATABASE_URL: file:./test.db

  # Combine all checks into a single status check
  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint, type-check, test]
    if: always()
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.lint.result }}" == "failure" || "${{ needs.type-check.result }}" == "failure" || "${{ needs.test.result }}" == "failure" ]]; then
            echo "One or more checks failed"
            exit 1
          else
            echo "All checks passed!"
          fi