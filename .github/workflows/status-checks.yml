name: Required Status Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: lacylights_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - run: npm ci
      
      - name: Setup test environment
        run: |
          cp .env.example .env
          sed -i 's/postgresql:\/\/lacylights:lacylights_dev_password@localhost:5432\/lacylights/postgresql:\/\/postgres:postgres@localhost:5432\/lacylights_test/' .env
          echo "ARTNET_ENABLED=false" >> .env
          echo "DMX_UNIVERSE_COUNT=2" >> .env

      - name: Setup database
        run: |
          npx prisma migrate deploy
          npx prisma generate

      - run: npm test
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/lacylights_test

  # Combine all checks into a single status check
  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint, type-check, test]
    if: always()
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.lint.result }}" == "failure" || "${{ needs.type-check.result }}" == "failure" || "${{ needs.test.result }}" == "failure" ]]; then
            echo "One or more checks failed"
            exit 1
          else
            echo "All checks passed!"
          fi